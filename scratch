
  page_action: {
    default_icon: {
      32: "images/invidious.png"
    },
    default_title: "Video Player Select"
  },
  chrome.contextMenus.create({"title": "Invidious Once", "contexts":["page_action"], id: "1i",
    "onclick": function(e){genericOnClick(e); setOnce("invidious");} });
    // "onclick": setOnce("invidious") });
  chrome.contextMenus.create({"title": "Hooktube Once", "contexts":["page_action"], id: "1h",
    "onclick": function(e){genericOnClick(e); setOnce("hooktube");} });
    // "onclick": setOnce("hooktube") });
  chrome.contextMenus.create({"title": "Youtube Once", "contexts":["page_action"], id: "1y",
    "onclick": function(e){genericOnClick(e); setOnce("youtube");} });
    // "onclick": setOnce("youtube") });

  // "onclick": genericOnClick() });
    // "onclick": chrome.storage.sync.set({always: "invidious"}) });
  //"onclick": genericOnClick() });
  // "onclick": chrome.storage.sync.set({always: "hooktube"}) });
    // "onclick": genericOnClick() });
    //"onclick": chrome.storage.sync.set({always: "youtube"}) });
/*
 * use this if I decide to go page action style
chrome.runtime.onInstalled.addListener(function() {
  chrome.declarativeContent.onPageChanged.removeRules(undefined, function() {
    chrome.declarativeContent.onPageChanged.addRules([
      {
        conditions: [
          new chrome.declarativeContent.PageStateMatcher({
            pageUrl: { urlMatches: '(((you|hook)tube\.com)|(youtu.be)|(invidio.us))\/' },
          })
        ],
        actions: [ new chrome.declarativeContent.ShowPageAction() ]
      }
    ]);
  });
});
*/

